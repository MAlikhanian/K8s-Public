---
# Service to expose the icons
apiVersion: v1
kind: Service
metadata:
  name: librechat-icons
  namespace: librechat
spec:
  selector:
    app: librechat-icons
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
# Deployment for serving static icon files
apiVersion: apps/v1
kind: Deployment
metadata:
  name: librechat-icons
  namespace: librechat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: librechat-icons
  template:
    metadata:
      labels:
        app: librechat-icons
    spec:
      imagePullSecrets:
        - name: docker-secret
      containers:
      - name: nginx
        image: docker.sebaoffice.ir/library/nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: icons
          mountPath: /usr/share/nginx/html/icons
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 32Mi
      volumes:
      - name: icons
        configMap:
          name: librechat-icons
      - name: nginx-config
        configMap:
          name: librechat-icons-nginx-config

---
# Nginx config for caching and CORS
apiVersion: v1
kind: ConfigMap
metadata:
  name: librechat-icons-nginx-config
  namespace: librechat
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        
        location /icons/ {
            alias /usr/share/nginx/html/icons/;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
            
            # Caching
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # Handle OPTIONS request
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        location / {
            return 404;
        }
    }

