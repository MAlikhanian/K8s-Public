# Default values for librechat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1



global:
  security:
    allowInsecureImages: true
   # default Secret for envs/ only Passwords. Can be locally generated with: kubectl create secret generic librechat-secret-envs --from-env-file=.env.example --dry-run=client -o yaml > secret-envs.yaml
   # For better maintainabillity, you can put all vars directly in the config Section and only overwrite Secrets with this if nessesary.
   # Required Values:
   # - CREDS_KEY
   # - CREDS_IV
   # - JWT_SECRET
   # - JWT_REFRESH_SECRET
   # - MEILI_MASTER_KEY
  librechat:
    existingSecretName: "librechat-credentials-env"
    # Used for Setting the Right Key, can be something like AZURE_API_KEY, if Azure OpenAI is used
    existingSecretApiKey: OPENAI_API_KEY
    # Optionally add extra globally accessible environment variables here. These can be referenced under ConfigEnv to make them accessible inside LibreChat
    # env:
    #  - name: API_KEY
    #    valueFrom:
    #      secretKeyRef:
    #        name: api_access
    #        key: api_key
    #  - name: CLIENT_ID
    #    valueFrom:
    #      secretKeyRef:
    #        name: credentials
    #        key: client_id

librechat:
  configEnv:
    PLUGIN_MODELS: gpt-4,gpt-4-turbo-preview,gpt-4-0125-preview,gpt-4-1106-preview,gpt-4-0613,gpt-3.5-turbo,gpt-3.5-turbo-0125,gpt-3.5-turbo-1106,gpt-3.5-turbo-0613
    DEBUG_PLUGINS: "true"
    # IMPORTANT
    # CHANGE: Move secrets to Kubernetes Secret (global.librechat.existingSecretName) and DO NOT keep plaintext here.
    # The following keys are intentionally removed from this file to avoid leaking secrets:
    # - CREDS_KEY
    # - CREDS_IV
    # - JWT_SECRET
    # - JWT_REFRESH_SECRET
    # Ensure these keys exist in the Secret named "librechat-credentials-env".

    # Set additional non-sensitive Config Params here
    # ENV_NAME: env-value

  # CHANGE: Keep MEILI_MASTER_KEY and any provider API keys in the same Secret.
  existingSecretName: "librechat-credentials-env"

  # For adding a custom config yaml-file you can set the contents in this var. See https://www.librechat.ai/docs/configuration/librechat_yaml/example
  configYamlContent: ""
  # configYamlContent: |
  #   version: 1.0.8

  #   cache: true

  #   interface:
  #     # Privacy policy settings
  #     privacyPolicy:
  #       externalUrl: 'https://librechat.ai/privacy-policy'
  #       openNewTab: true

  #     # Terms of service
  #     termsOfService:
  #       externalUrl: 'https://librechat.ai/tos'
  #       openNewTab: true

  #   registration:
  #     socialLogins: ["discord", "facebook", "github", "google", "openid"]
  #   endpoints:
  #     azureOpenAI:
  #      # Endpoint-level configuration
  #      titleModel: "gpt-4o"
  #      plugins: true
  #      assistants: true
  #      groups:
  #           Group-level configuration
  #         - group: "my-resource-sweden"
  #           apiKey: "${SWEDEN_API_KEY}"
  #           instanceName: "my-resource-sweden"
  #           deploymentName: gpt-4-1106-preview
  #           version: "2024-03-01-preview"
  #           assistants: true
  #           # Model-level configuration
  #           models:
  #             gpt-4o: true
  #     custom:
  #       # OpenRouter.ai
  #       - name: "OpenRouter"
  #         apiKey: "${OPENROUTER_KEY}"
  #         baseURL: "https://openrouter.ai/api/v1"
  #         models:
  #           default: ["openai/gpt-3.5-turbo"]
  #           fetch: true
  #         titleConvo: true
  #         titleModel: "gpt-3.5-turbo"
  #         summarize: false
  #         summaryModel: "gpt-3.5-turbo"
  #         forcePrompt: false
  #         modelDisplayLabel: "OpenRouter"

  # name of existing Yaml configmap, key must be librechat.yaml
  existingConfigYaml: ""

  # Volume used to store image Files uploaded to the Web UI
  imageVolume:
    enabled: true
    size: 20Gi            # CHANGE: increased from 10G to 20Gi for more uploads
    accessModes: ReadWriteOnce
    storageClassName: ceph-block  # CHANGE: set to Ceph RBD storage class used in your cluster

# only lite RAG is supported
librechat-rag-api:
  enabled: false
  # can be azure, openai, huggingface or huggingfacetei
  embeddingsProvider: openai


#image:
#  repository: danny-avila/librechat
#  registry: ghcr.io
#  pullPolicy: IfNotPresent
#  # Overrides the image tag whose default is the chart appVersion.
#  tag: ""

image:
  repository: danny-avila/librechat
  registry: docker.sebaoffice.ir
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets:
  - name: docker-secret
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

lifecycle: {}
# # base for adding a custom banner // see https://github.com/danny-avila/LibreChat/pull/3952 for an example
#   postStart:
#     exec:
#       command: ["/bin/sh", "-c", "npm run update-banner <displayFrom(Format: yyyy-mm-ddTHH:MM:SSZ)> <displayTo(Format: yyyy-mm-ddTHH:MM:SSZ)> <message> <isPublic(true/false)>"]



podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  # readOnlyRootFilesystem: true # not supported yet
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP # LoadBalancer, NodePort, ClusterIP
  port: 3080
  targetPort: 3080
  containerPort: 3080
  annotations: {}

ingress:
  enabled: true
  className: haproxy           # CHANGE: use HAProxy ingress class (your cluster default)
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod  # CHANGE: enable cert-manager for TLS
    haproxy.org/request-set-header: |
      X-Forwarded-Proto https                        # CHANGE: preserve scheme for app URLs
    haproxy.org/proxy-body-size: 64m                 # CHANGE: allow larger uploads via UI
  hosts:
    - host: chat.sebaoffice.ir                  # CHANGE: set your domain
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: chat-sebaoffice-tls                      # CHANGE: TLS secret managed by cert-manager
      hosts:
        - chat.sebaoffice.ir

resources:
  # CHANGE: set sensible defaults; tune as needed
  limits:
    cpu: "1"
    memory: 2Gi
  requests:
    cpu: 250m
    memory: 512Mi


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

livenessProbe:
  httpGet:
    path: /health
    port: 3080
readinessProbe:
  httpGet:
    path: /health
    port: 3080

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Host aliases for custom domain-to-IP mappings (adds entries to /etc/hosts)
hostAliases: []
# Example - Redirect AWS Bedrock to proxy:
# hostAliases:
#   - ip: "10.1.2.3"
#     hostnames:
#       - "bedrock-runtime.eu-central-1.amazonaws.com"

# DNS Configuration
# Customize DNS resolution for redirecting traffic to proxy servers
dnsPolicy: ""  # Options: ClusterFirst, Default, None, ClusterFirstWithHostNet
dnsConfig: {}
# Example configuration for custom DNS:
# dnsPolicy: "None"  # Use only custom DNS settings
# dnsConfig:
#   nameservers:
#     - "10.0.0.10"  # Your custom DNS server
#     - "8.8.8.8"    # Fallback DNS
#   searches:
#     - "svc.cluster.local"
#     - "cluster.local"
#   options:
#     - name: ndots
#       value: "2"
#     - name: timeout
#       value: "1"

# Strategy for LibreChat deployment updates
updateStrategy:
  type: RollingUpdate

# MongoDB Parameters
#mongodb:
#  enabled: true
#  auth:
#    enabled: false
#  databases:
#   - LibreChat
#  persistence:
#    # CHANGE: enable persistence for MongoDB and set Ceph storage class
#    enabled: true
#    accessModes:
#      - ReadWriteOnce
#    size: 16Gi
#    storageClass: ceph-block

mongodb:
  enabled: true
  auth:
    enabled: false
  databases:
   - LibreChat
  image:
    registry: docker.sebaoffice.ir
    repository: bitnami/mongodb
    tag: latest
    pullPolicy: IfNotPresent
  imagePullSecrets:
    - docker-secret
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 16Gi
    storageClass: ceph-block

#meilisearch:
#  enabled: true
#  persistence:
#    enabled: true
#    storageClass: ceph-block   # CHANGE: set to your Ceph storage class
#    size: 10Gi                      # CHANGE: explicit size for index persistence
#  image:
#    tag: "v1.7.3"
#  auth:
#    # Use an existing Kubernetes secret for the MEILI_MASTER_KEY
#    existingMasterKeySecret: "librechat-credentials-env"

meilisearch:
  enabled: true
  persistence:
    enabled: true
    storageClass: ceph-block
    size: 10Gi
  image:
    registry: docker.sebaoffice.ir
    repository: getmeili/meilisearch
    tag: "v1.7.3"
    pullPolicy: IfNotPresent
  imagePullSecrets:
    - docker-secret
  auth:
    existingMasterKeySecret: "librechat-credentials-env"
